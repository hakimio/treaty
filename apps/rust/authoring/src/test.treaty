<style>
  button { cursor: pointer; }
  label { display: inline-flex; align-items: center; cursor: pointer; user-select: none; }
  .cm-editor { height: 100%; }
  #loading { position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 1; display: flex; justify-content: center; align-items: center; }
  #container { display: flex; height: 100vh; }
  #left { display: flex; flex: 1; flex-direction: column; border-right: 1px solid #444; max-width:50%; }
  #editor { flex: 1; overflow-y: auto;}
  #panel { height: 20%; overflow-y: auto; padding: 1em; color: #d1d5da; border-top: 1px solid #444!important; }
  #right { flex: 1; display:flex; flex-direction: column; min-width: 0; }
  .header {  border-bottom: 1px solid #444; display: flex; height: 50px; align-items: stretch; }
  .left-container { padding: .6em; display: flex; align-items: center; justify-content: space-between; }
  .controls { padding: .6em; }
  .controls > div { padding: .2em .5em; display: flex; flex-wrap: wrap; gap: 4px; }
  .controls > div > button { padding: 8px 16px; background-color: #2c3136; color: white; border: 1px solid #444; transition: background-color 0.3s; white-space: nowrap; }
  .controls > div > button:hover { background-color: #444; }
  .controls > div > button.active { background-color: #555; }
  .controls > div > label { margin-right: 4px; }
  .controls label { font-size: 14px; }
  #duration { margin-left: auto; }
  #viewer { flex: 1; overflow-y: auto; }
  #divider { width: 4px; background: #444; }
  #divider:hover { background: #666; cursor: col-resize; }
</style>

import logo from './component/logo.treaty';
import { viewChild, ElementRef, effect } from '@angular/core';
import {EditorView, basicSetup} from "codemirror"
import {javascript} from "@codemirror/lang-javascript"
import { treaty } from './lang-treaty/treatyjs'

const editor = viewChild('editor');
const viewer = viewChild('viewer');


effect(() => {
  if (editor()?.nativeElement) {
    window.view = new EditorView({
      doc: `// write code here`,
      extensions: [
        basicSetup,
        javascript(),
        treaty()
      ],
      lineWrapping: true,
      parent: editor()?.nativeElement
    })
  }
});


<div id="container">
  <div id="left">
    <div class="header left-container">
      <logo></logo>
      <div>
        <label>
          File
          <select id="file-type-select" style="margin-left: 4px">
            <option value="treat">treaty</option>
            <option disabled value="angular-html">Angular IVY HTML (coming soon)</option>
            <option disabled value="angular">Angular IVY (coming soon)</option>
          </select>
        </label>
      </div>
    </div>
    <div #editor id="editor"></div>
  </div>
  <div id="divider"></div>
  <div #right id="right">
    <div class="header controls">
      <div>
        <button type="button" id="codegen" (click)="onClick(viewer)">Codegen</button>
      </div>
    </div>
    <pre #viewer id="viewer"></pre>
  </div>
</div>

import { treatyToIvy } from '../tools/treaty-sfc/treat-to-ivy'
import * as ng from '@angular/compiler';

const onClick = async (viwer) => {
  const result = await treatyToIvy(window.view.state.doc.toLocaleString(), 'example.treat', ng, () => 'example')
  viwer.innerHTML = result;
  console.log(result);
}